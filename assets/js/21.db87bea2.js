(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{255:function(t,s,i){"use strict";i.r(s);var e=i(0),a=Object(e.a)({},(function(){var t=this.$createElement;this._self._c;return this._m(0)}),[function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"你好吗👋"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#你好吗👋"}},[this._v("#")]),this._v(" 你好吗👋")]),this._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),s("p",[this._v("前端工程师有很多性能优化的手段，包括 CDN、CSS Sprite、文件的合并压缩、异步加载、资源缓存等等。其实我们绝大部分情况是在干一件事情，那就是尽量降低一个页面的网络请求成本从而缩短页面加载资源的时间并降低用户可感知的延时。当然减少用户可感知的延时也不仅仅是在网络请求成本层面，还有浏览器渲染效率，代码质量等等。")])])])}],!1,null,null,null);s.default=a.exports}}]);